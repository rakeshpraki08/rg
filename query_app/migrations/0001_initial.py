# Generated by Django 3.2.16 on 2022-11-05 14:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('Region', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('DB_Host', models.CharField(max_length=100)),
                ('DB_Service_Name', models.CharField(max_length=50)),
                ('DB_Port', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='Reports_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Report_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Data_Fetched', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Reports Data',
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Report_Name', models.CharField(max_length=200)),
                ('Sql_Query', models.TextField()),
                ('Last_Run', models.DateTimeField(blank=True, null=True)),
                ('Task_Status', models.CharField(default='Not Running', max_length=15)),
                ('Region', models.ForeignKey(default='Unspecified', on_delete=django.db.models.deletion.CASCADE, to='query_app.regions')),
            ],
            options={
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_domain', message='Only p&g id is allowed', regex='@(pg.com)$')], verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
